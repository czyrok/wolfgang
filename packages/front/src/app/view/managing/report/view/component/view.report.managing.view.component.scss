@use '../../../../../../scss/lib/property';

section {
    height: 100%;
}

section .box {
    height: 100%;
}

section .box .grid {
    display: grid;
    grid-template-areas:
        'a c'
        'b c';
    grid-template-columns: 1fr auto;
    grid-template-rows: auto 1fr;
    row-gap: property.get('borderLimit', 'big');
    column-gap: property.get('borderLimit', 'big');
    height: 100%;
}

section .box .grid .area-a {
    display: flex;
    row-gap: property.get('borderLimit', 'big');
    grid-area: a;
    flex-direction: column;
    position: sticky;
    top: 0;
}

section .box .grid .area-a .details {
    display: flex;
    justify-content: space-between;
    column-gap: property.get('borderLimit', 'big');
    row-gap: property.get('borderLimit', 'big');
    flex-wrap: wrap;
}

section .box .grid .area-a .details .area {
    display: flex;
    column-gap: property.get('borderLimit', 'big');
    row-gap: property.get('borderLimit', 'big');
    flex-wrap: wrap;
}

section .box .grid .area-a .concerned-users {
    display: flex;
    flex-direction: column;
    row-gap: property.get('borderLimit', 'big');
}

section .box .grid .area-b {
    grid-area: b;
    display: flex;
    flex-direction: column;
    row-gap: property.get('borderLimit', 'regular');
}

section .box .grid .area-c {
    grid-area: c;
    display: flex;
    justify-content: center;
    height: 100%;
    position: relative;
}

section .box .grid .area-c .chat-wrapper {
    width: property.get('size', 'aside');
}

@media (max-width: 1050px) {
    section .box .grid {
        display: flex;
        flex-direction: column;
    }

    section .box .grid .area-c .chat-wrapper {
        width: 80%;
        position: absolute;
        min-height: 60vh;
    }
}
