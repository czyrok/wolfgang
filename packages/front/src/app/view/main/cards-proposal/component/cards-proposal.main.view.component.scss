@use '../../../../app.scss';

@use '../../../../../scss/lib/property';

@use '~scss-toolkit/src/mixin/theme';


main {
    display: grid;
    grid-template-areas: 'a'
    'b';
}

main .container-1 {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

main .container-2 {
    display: flex;
    flex-direction: column;
    align-items: center;
}

main .wrapper {
    width: property.get('size', 'page');
    border-radius: property.get('borderRadius', 'rounded');
    overflow: hidden;
    display: grid;
    grid-template-areas:
        'a'
        'b';
    box-shadow: property.get('shadow', 'box', 'regular');

    @include theme.themeHandler(true, 'isolatedElement') {
        background-color: theme.get('background');
    }
}

main .wrapper h2 {
    padding: property.get('borderLimit', 'regular');
    border-bottom-left-radius: property.get('borderRadius', 'rounded');
    border-bottom-right-radius: property.get('borderRadius', 'rounded');
    text-align: center;
    margin-bottom: -1 * property.get('borderRadius', 'rounded');
    z-index: 1;

    @include theme.themeHandler(true, 'isolatedElement', 'title') {
        background-color: theme.get('background');
    }
}

main .wrapper .sub {
    display: flex;
    flex-direction: column;
    row-gap: property.get('borderLimit', 'big');
    padding: property.get('borderLimit', 'regular');
    padding-top: property.get('borderLimit', 'regular') + property.get('borderRadius', 'rounded');
}

main .wrapper .sub .line {
    display: grid;
    grid-template-areas: 'a b c d';
    align-items: center;
    grid-template-columns: 1fr auto auto auto;
    column-gap: property.get('borderLimit', 'big');
}

main .wrapper .sub .line p {
    box-sizing: border-box;
    padding: property.get('borderLimit', 'regular');
    border-radius: property.get('borderRadius', 'rounded');

    @include theme.themeHandler(true, 'isolatedElement', 'item') {
        background-color: theme.get('background');
    }
}